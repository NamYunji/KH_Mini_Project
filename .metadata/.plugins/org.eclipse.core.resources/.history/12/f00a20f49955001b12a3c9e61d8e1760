package view;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

//jtabletest
/*
 * Table Model
 */
public class TableModel extends JFrame{

	/**
	 * 테이블모델을 만들거고, 그 안에 데이터가 저장됨
	 * JTable(TableModel)
	 * - TableModel 데이터가 저장되는 객체, 이벤트핸들링
	 * JScrollPane(JTable)을 추가
	 * - 헤더부 노출(표 각각 부분의 항목), 스크롤 기능을 위한 목적
	 *
	 */

		List<Voca1> list = new ArrayList<>();
		{
			list.add(new Voca1(1, "apple", "사과"));
			list.add(new Voca1(2, "orange", "오렌지"));
			list.add(new Voca1(3, "knife", "칼"));
			list.add(new Voca1(4, "book", "책"));
			list.add(new Voca1(5, "glass", "유리"));
			list.add(new Voca1(6, "window", "창문"));
			list.add(new Voca1(7, "light", "빛"));
			list.add(new Voca1(8, "perfume", "향수"));
			list.add(new Voca1(9, "mouth", "입"));
			list.add(new Voca1(10, "lip	", "입술"));
			list.add(new Voca1(11, "king", "왕"));
			list.add(new Voca1(12, "queen", "여왕"));
			list.add(new Voca1(13, "slave", "노예"));
			list.add(new Voca1(14, "devil", "악마"));
			list.add(new Voca1(15, "angel", "천사"));
		}
		
		public TableModel(int w, int h, String title) {
			MyUtil.init(this, w, h, title);
			
			//컬럼정보
			Object[] columnNames = {
					"번호", "단어", "뜻"
			};

			//행 내용 입력
			Object[][] rowData = new Object[list.size()][columnNames.length];
			for (int i = 0; i < list.size(); i++) {
				Voca1 vc = list.get(i);
				rowData[i][0] = vc.getNum();
				rowData[i][1] = vc.getWord();
				rowData[i][2] = vc.getMeaning();				
			}
			
			//테이블 생성
			JTable table = new JTable(rowData, columnNames);
			
			//헤더 클릭시 정렬기능
			table.setAutoCreateRowSorter(true);
			
			//viewport 지정
			table.setPreferredScrollableViewportSize(new Dimension(800,300));
			
			//scrollPane
			JScrollPane scrollPane = new JScrollPane(table);
			
			//셀 편집 시 이벤트 처리하기
			TableModel model = table.getModel();
			model.addTableModelListener(new TableModelListener() {
				
				@Override
				public void tableChanged(TableModelEvent e) {
					//몇행 몇열의 데이터가 변경되었는지 알아보기
					//꼭 변경되지 않아도, 포커스를가졌다가 잃을때, 콘솔창에 행,열 정보(몇행 몇행이 바뀌었는지)가 출력됨
					int row = e.getFirstRow();
					int col = e.getColumn();
//					System.out.println(row + ", " + col);
					//실제 값의 변경을 알아보기
					//꼭 변경되지 않아도, 포커스를가졌다가 잃을때, 콘솔창에 바뀐 데이터가 출력됨
					Object data = model.getValueAt(row, col);
					System.out.println(data);
				}
			});
			
			//하단 저장 버튼
			JButton btn = new JButton("저장");
			//버튼은 actionlistener!
			btn.addActionListener(new ActionListener() {
				//데이터를 다 읽어와야하고
				//실제 데이터가 저장되어있는 모델에 접근해야 함
				@Override
				public void actionPerformed(ActionEvent e) {
										//행과 열의 길이
					int rowLen = model.getRowCount();
					int colLen = model.getColumnCount();
					
					//행, 열의 정보를 알아냈으면, 중첩반복문을 이용해서
					List<Voca> newList = new ArrayList<Voca>();
					for (int i = 0; i < rowLen; i++) {
						Voca newVc = new Voca();
						for (int j = 0; j <colLen ; j++) {
							Object data = model.getValueAt(i, j);
							System.out.println(data);
							switch (j) {
							case 0 : newVc.setNum((int)data); break;
							case 1 : newVc.setWord((String)data); break;
							case 2 : newVc.setWord((String)data);; break;
							}
						
					}
						newList.add(newVc);
					}
					
					for (Voca newMember : newList) {
						System.out.println(newMember);
					}
				}
			});
			add(scrollPane);
			add(btn, BorderLayout.SOUTH);
			pack();
		}

		public static void main(String[] args) {
				new TableModel(800, 300, "Word List").setVisible(true);
		}

	}
